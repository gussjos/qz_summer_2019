import numpy as np
from numpy import linalg
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
import pandas
from mpl_toolkits import mplot3d
from collections import defaultdict
import sys
path = sys.path[0] + '/../sample_QTM-OR-ZED_data/'	#if running sample data
#path = sys.path[0]									#if running like normal

from read_and_plot_trajectories import get_qtm_data
from read_and_plot_trajectories import get_rift_data
from scale_and_match_trajectories import match_trajectories
qtm_traj_matched, or_traj_matched = match_trajectories(get_qtm_data(), get_rift_data())
pdata = np.array(qtm_traj_matched).transpose()
qdata = np.array(or_traj_matched).transpose()

#define centroids
centroid_p = np.mean(pdata, axis=0)
centroid_q = np.mean(qdata, axis=0)

#transform centroids to origin
pdata = pdata - centroid_p

H = np.zeros((3,3) #initiate
for i,_ in enumerate(pdata):
	print(pdata[i])
	H += np.outer(pdata[i],qdata[i])

U, S, V = np.linalg.svd(H)


R = V.dot(U.transpose())
t = -R.dot(centroid_p) + centroid_q

print(R)
print(t)

